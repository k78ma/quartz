{"path":".obsidian/plugins/text-extractor/cache/9ad3fad8489ea86bdbad36956b9a5bb5.json","text":"As an example, imagine that we want to encode blood types, which are drawn from the set { A+, A—, B+, B—, AB+, AB—, O+, O—}. Thereis no obvious linear numeric scaling or even ordering to this set. But there is a reasonable factoring, into two features: { A, B, AB, O} and {4, —1}. And, in fact, we can reasonably factor the first group into { A, not A}, { B, not B} note So, here are two plausible encodings of the whole set: * Use a 6-D vector, with two dimensions to encode each of the factors using a one-hot encoding. * Use a 3-D vector, with one dimension for each factor, encoding its presence as 1.0 and absence as —1.0 (this is sometimes better than 0.0). In this case, AB+ would be (1.0, 1.0,1.0) and O— would be (—1.0, —1.0, —1.0).","libVersion":"0.2.2","langs":"eng"}